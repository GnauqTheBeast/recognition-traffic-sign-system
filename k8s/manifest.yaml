---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          env:
            - name: POSTGRES_DB
              value: lcm_microservice_db
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: "123"
          ports:
            - containerPort: 5432
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432
      nodePort: 30032
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eureka-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: eureka-server
  template:
    metadata:
      labels:
        app: eureka-server
    spec:
      containers:
        - name: eureka-server
          image: lcm-microservice-eureka-server:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8761
---
apiVersion: v1
kind: Service
metadata:
  name: eureka-server
spec:
  selector:
    app: eureka-server
  ports:
    - port: 8761
      targetPort: 8761
      nodePort: 30061
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
        - name: api-gateway
          image: lcm-microservice-api-gateway:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
spec:
  selector:
    app: api-gateway
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30956
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traffic-sign-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traffic-sign-service
  template:
    metadata:
      labels:
        app: traffic-sign-service
    spec:
      containers:
        - name: traffic-sign-service
          image: lcm-microservice-traffic-sign-service:latest
          imagePullPolicy: Never
          env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://postgres:5432/lcm_microservice_db
            - name: SPRING_DATASOURCE_USERNAME
              value: postgres
            - name: SPRING_DATASOURCE_PASSWORD
              value: "123"
          ports:
            - containerPort: 8083
---
apiVersion: v1
kind: Service
metadata:
  name: traffic-sign-service
spec:
  selector:
    app: traffic-sign-service
  ports:
    - port: 8083
      targetPort: 8083
      nodePort: 30083
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
        - name: user-service
          image: lcm-microservice-user-service:latest
          imagePullPolicy: Never
          env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://postgres:5432/lcm_microservice_db
            - name: SPRING_DATASOURCE_USERNAME
              value: postgres
            - name: SPRING_DATASOURCE_PASSWORD
              value: "123"
          ports:
            - containerPort: 8084
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
spec:
  selector:
    app: user-service
  ports:
    - port: 8084
      targetPort: 8084
      nodePort: 30084
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: react-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: react-app
  template:
    metadata:
      labels:
        app: react-app
    spec:
      containers:
        - name: react-app
          image: lcm-microservice-react-app:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: react-app
spec:
  selector:
    app: react-app
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 31679
  type: NodePort